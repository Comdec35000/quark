on:
  release:
    types: [published]
jobs:
  build:
    strategy:
      matrix:
        deno: [1.6.3]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    
    name: Compile quark on Linux
    steps:
      - uses: actions/checkout@master
      - name: Checkout submodules
        run: |
          git clone https://github.com/quark-lang/std
          git clone https://github.com/quark-lang/cli
      - name: Setup Deno module
        uses: denolib/setup-deno@master
        with:
          deno-version: ${{matrix.deno}}

      - name: Print deno version
        run: deno --version
      
      - name: Compile deno app into executable
        run: deno compile --unstable --no-check src/main.ts -o quark
      
      #- name: Compress binaries
      #  uses: svenstaro/upx-action@v2
      #  with:
      #    file: './quark-${{ matrix.platform }}'
      #    args: --best --lzma
      #    strip: false
      #  if: matrix.platform != 'windows-latest'
                     
      #- name: Compress binaries on Windows
      #  uses: svenstaro/upx-action@v2
      #  with:
      #    file: './quark-${{ matrix.platform }}.exe'
      #    args: --best --lzma
      #    strip: false
      #  if: matrix.platform == 'windows-latest' 
        
      - name: ZIP Quark on Unix
        if: matrix.platform != 'windows-latest'
        run: zip -r 'quark-${{ matrix.platform }}.zip' quark cli std README.md
        
      - name: ZIP Quark on Windows
        if: matrix.platform == 'windows-latest'
        run: |
          ls
          Compress-Archive -CompressionLevel Optimal -Force -Path quark.exe, cli, std, README.md -DestinationPath 'quark-${{ matrix.platform }}.zip' 
        
      - uses: AButler/upload-release-assets@v2.0
        with:
          files: './quark-${{ matrix.platform }}.zip'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
