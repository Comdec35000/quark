{
  (import "assert.qrk")
  (import "factorial.qrk")
  (import "list.qrk")

  # Factorial tests
  (describe "Factorial tests" (fn () {
    (assert "should return 5! = 120" (factorial 5) 120)
    (assert "should return 4! = 24" (factorial 4) 24)
    (assert "should return 1! = 1" (factorial 0) 1)
    (assert "should return 1! = 1" (factorial 1) 0)
  }))

  # Length tests
  (describe "Length tests" (fn () {
    (assert "should return 4" (length "test") 4)
    (assert "should return 0" (length) 0)
    (assert "should return list length, 3" (length (list "test" "test" "test")) 3)
  }))

  # Push tests

  (describe "Push tests" (fn () {
    (let array (list))
    (let string "")

    (assert "should be equal lists" (push array "test") (list "test"))
    (assert "should be equal strings" (push string "t") "t")
  }))

  # Foreach tests
  (describe "Foreach tests" (fn () {
    (let users (list "Thomas" "Ness" "ImRobot"))
    (let reproductionUsers (list))
    (foreach users (fn (user) {
      (push reproductionUsers user)
    }))

    (assert "should return same array as looped" users reproductionUsers)
  }))

  (finish)
}